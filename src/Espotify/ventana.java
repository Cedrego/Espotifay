/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Espotify;

import javax.swing.*;
import java.awt.*;
import java.util.ArrayList;
import java.util.List;
import Espotify.InfiniteVoid;

/**
 *
 * @author Camilo
 */
public class ventana extends javax.swing.JFrame {
    
    // Inicialización
    Factory fabrica = Factory.getInstance();
    private ICtrl IC= fabrica.getICtrl();
    
    public List<JTextField> textFields; // Lista para almacenar los JTextFields añadidos
    
    List<Genero> generosAlbum = new ArrayList<>(); //lista de generos para usar en alta album
    List<Tema> temasAlbum = new ArrayList<>(); //lista de tenas para usar en alta album
    
    //private List<JTextField> textFields; // Lista para almacenar los JTextFields añadidos
    /**
     * Creates new form ventana
     */
    public ventana() {
        Espotify.InfiniteVoid gojo = new Espotify.InfiniteVoid(IC);
        initComponents();
    }
    
    int opcion = 0;
    
    String[] years = {
        "2024", "2023", "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015",
        "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005",
        "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995",
        "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985",
        "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975",
        "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965",
        "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955",
        "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945",
        "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935",
        "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925",
        "1924", "1923", "1922", "1921", "1920"};

    String[] days31 = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"};
    String[] days30 = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30"};
    String[] days29 = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29"};

    String[] months = {"Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"};
    int option;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Logo = new javax.swing.JLabel();
        EXIT = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Text1 = new javax.swing.JLabel();
        Text2 = new javax.swing.JLabel();
        Text3 = new javax.swing.JLabel();
        Text4 = new javax.swing.JLabel();
        Text5 = new javax.swing.JLabel();
        Text6 = new javax.swing.JLabel();
        Text7 = new javax.swing.JLabel();
        Text8 = new javax.swing.JLabel();
        Text9 = new javax.swing.JLabel();
        Text10 = new javax.swing.JLabel();
        Text11 = new javax.swing.JLabel();
        Text12 = new javax.swing.JLabel();
        Text13 = new javax.swing.JLabel();
        Text14 = new javax.swing.JLabel();
        Text15 = new javax.swing.JLabel();
        TextField1 = new javax.swing.JTextField();
        TextField2 = new javax.swing.JTextField();
        TextField3 = new javax.swing.JTextField();
        TextField4 = new javax.swing.JTextField();
        TextField5 = new javax.swing.JTextField();
        TextField6 = new javax.swing.JTextField();
        TextField7 = new javax.swing.JTextField();
        TextField8 = new javax.swing.JTextField();
        TextField9 = new javax.swing.JTextField();
        ComboBox1 = new javax.swing.JComboBox<String>();
        ComboBox2 = new javax.swing.JComboBox<String>();
        ComboBox4 = new javax.swing.JComboBox<String>();
        ComboBox3 = new javax.swing.JComboBox<String>();
        ComboBox5 = new javax.swing.JComboBox<>();
        ComboBox6 = new javax.swing.JComboBox<String>();
        ACEPTAR = new javax.swing.JButton();
        Button1 = new javax.swing.JButton();
        Button2 = new javax.swing.JButton();
        Button3 = new javax.swing.JButton();
        Button4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel12 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TextArea1 = new javax.swing.JTextArea();
        Text16 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        AltaPerfil = new javax.swing.JButton();
        AltaAlbum = new javax.swing.JButton();
        CrearLista = new javax.swing.JButton();
        SeguirUsuario = new javax.swing.JButton();
        DejarSeguir = new javax.swing.JButton();
        GuardarTLA = new javax.swing.JButton();
        EliminarTLA = new javax.swing.JButton();
        ConsultarPerfil = new javax.swing.JButton();
        ConsultarAlbum = new javax.swing.JButton();
        ConsultarLista = new javax.swing.JButton();
        AltaGenero = new javax.swing.JButton();
        AgregarTemasListas = new javax.swing.JButton();
        QuitarTemasListas = new javax.swing.JButton();
        PublicarLista = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ESPOTIFY");
        setBackground(new java.awt.Color(0, 0, 0));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        Logo.setBackground(new java.awt.Color(0, 0, 0));
        Logo.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Logo.setForeground(new java.awt.Color(0, 204, 102));
        Logo.setText("Espotify");

        EXIT.setBackground(new java.awt.Color(0, 204, 102));
        EXIT.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        EXIT.setText("SALIR");
        EXIT.setBorderPainted(false);
        EXIT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setAutoscrolls(true);

        Text1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text1.setForeground(new java.awt.Color(255, 255, 255));
        Text1.setText("Text1");

        Text2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text2.setForeground(new java.awt.Color(255, 255, 255));
        Text2.setText("Text2");

        Text3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text3.setForeground(new java.awt.Color(255, 255, 255));
        Text3.setText("Text3");

        Text4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text4.setForeground(new java.awt.Color(255, 255, 255));
        Text4.setText("Text4");

        Text5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text5.setForeground(new java.awt.Color(255, 255, 255));
        Text5.setText("Text5");

        Text6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text6.setForeground(new java.awt.Color(255, 255, 255));
        Text6.setText("Text6");

        Text7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text7.setForeground(new java.awt.Color(255, 255, 255));
        Text7.setText("Text7");

        Text8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text8.setForeground(new java.awt.Color(255, 255, 255));
        Text8.setText("Text8");

        Text9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text9.setForeground(new java.awt.Color(255, 255, 255));
        Text9.setText("Text9");

        Text10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text10.setForeground(new java.awt.Color(255, 0, 0));
        Text10.setText("Text10");

        Text11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text11.setForeground(new java.awt.Color(255, 255, 255));
        Text11.setText("Text11");

        Text12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text12.setForeground(new java.awt.Color(255, 255, 255));
        Text12.setText("Text12");

        Text13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text13.setForeground(new java.awt.Color(255, 255, 255));
        Text13.setText("Text13");

        Text14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text14.setForeground(new java.awt.Color(255, 255, 255));
        Text14.setText("Text14");

        Text15.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text15.setForeground(new java.awt.Color(0, 204, 102));
        Text15.setText("Text15");

        TextField1.setBackground(new java.awt.Color(102, 102, 102));
        TextField1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField1.setForeground(new java.awt.Color(255, 255, 255));
        TextField1.setText("TextField1");
        TextField1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField1ActionPerformed(evt);
            }
        });

        TextField2.setBackground(new java.awt.Color(102, 102, 102));
        TextField2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField2.setForeground(new java.awt.Color(255, 255, 255));
        TextField2.setText("TextField2");
        TextField2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField2ActionPerformed(evt);
            }
        });

        TextField3.setBackground(new java.awt.Color(102, 102, 102));
        TextField3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField3.setForeground(new java.awt.Color(255, 255, 255));
        TextField3.setText("TextField3");
        TextField3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField3ActionPerformed(evt);
            }
        });

        TextField4.setBackground(new java.awt.Color(102, 102, 102));
        TextField4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField4.setForeground(new java.awt.Color(255, 255, 255));
        TextField4.setText("TextField4");
        TextField4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        TextField5.setBackground(new java.awt.Color(102, 102, 102));
        TextField5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField5.setForeground(new java.awt.Color(255, 255, 255));
        TextField5.setText("TextField5");
        TextField5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        TextField6.setBackground(new java.awt.Color(102, 102, 102));
        TextField6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField6.setForeground(new java.awt.Color(255, 255, 255));
        TextField6.setText("TextField6");
        TextField6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        TextField7.setBackground(new java.awt.Color(102, 102, 102));
        TextField7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField7.setForeground(new java.awt.Color(255, 255, 255));
        TextField7.setText("TextField7");
        TextField7.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        TextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextField7ActionPerformed(evt);
            }
        });

        TextField8.setBackground(new java.awt.Color(102, 102, 102));
        TextField8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField8.setForeground(new java.awt.Color(255, 255, 255));
        TextField8.setText("TextField8");
        TextField8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        TextField9.setBackground(new java.awt.Color(102, 102, 102));
        TextField9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextField9.setForeground(new java.awt.Color(255, 255, 255));
        TextField9.setText("TextField9");
        TextField9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        ComboBox1.setBackground(new java.awt.Color(102, 102, 102));
        ComboBox1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ComboBox1.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {""}));
        ComboBox1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox1ActionPerformed(evt);
            }
        });

        ComboBox2.setBackground(new java.awt.Color(102, 102, 102));
        ComboBox2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ComboBox2.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {""}));
        ComboBox2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox2ActionPerformed(evt);
            }
        });

        ComboBox4.setBackground(new java.awt.Color(102, 102, 102));
        ComboBox4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ComboBox4.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        ComboBox4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox4ActionPerformed(evt);
            }
        });

        ComboBox3.setBackground(new java.awt.Color(102, 102, 102));
        ComboBox3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ComboBox3.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {""}));
        ComboBox3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox3ActionPerformed(evt);
            }
        });

        ComboBox5.setBackground(new java.awt.Color(102, 102, 102));
        ComboBox5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ComboBox5.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        ComboBox5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox5ActionPerformed(evt);
            }
        });

        ComboBox6.setBackground(new java.awt.Color(102, 102, 102));
        ComboBox6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ComboBox6.setForeground(new java.awt.Color(255, 255, 255));
        ComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        ComboBox6.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        ComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBox6ActionPerformed(evt);
            }
        });

        ACEPTAR.setBackground(new java.awt.Color(0, 204, 102));
        ACEPTAR.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ACEPTAR.setText("ACEPTAR");
        ACEPTAR.setBorderPainted(false);
        ACEPTAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ACEPTARActionPerformed(evt);
            }
        });

        Button1.setBackground(new java.awt.Color(0, 204, 102));
        Button1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Button1.setText("Button1");
        Button1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button1ActionPerformed(evt);
            }
        });

        Button2.setBackground(new java.awt.Color(0, 204, 102));
        Button2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Button2.setText("Button2");
        Button2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Button2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button2ActionPerformed(evt);
            }
        });

        Button3.setBackground(new java.awt.Color(0, 204, 102));
        Button3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Button3.setText("Button3");
        Button3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Button3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button3ActionPerformed(evt);
            }
        });

        Button4.setBackground(new java.awt.Color(0, 204, 102));
        Button4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Button4.setText("OK");
        Button4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        Button4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button4ActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Usuarios Seguidos:               ");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Temas Favoritos:                   ");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Temas Favoritos :                   ");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Playlists Favoritas:                  ");

        jScrollPane1.setPreferredSize(new java.awt.Dimension(172, 148));

        jPanel11.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 172, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 148, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel11);

        jPanel8.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );

        jScrollPane2.setViewportView(jPanel8);

        jPanel9.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );

        jScrollPane3.setViewportView(jPanel9);

        jPanel10.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 184, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
        );

        jScrollPane4.setViewportView(jPanel10);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Usuarios que lo siguen:");

        jPanel12.setAutoscrolls(true);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 161, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jScrollPane5.setViewportView(jPanel12);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, 0, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, 0, 0, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2, jScrollPane3, jScrollPane4, jScrollPane5});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, 0, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addComponent(jScrollPane5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2, jScrollPane3, jScrollPane4, jScrollPane5});

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 351, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        TextArea1.setBackground(new java.awt.Color(102, 102, 102));
        TextArea1.setColumns(20);
        TextArea1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        TextArea1.setForeground(new java.awt.Color(255, 255, 255));
        TextArea1.setRows(5);
        jScrollPane6.setViewportView(TextArea1);

        Text16.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        Text16.setForeground(new java.awt.Color(242, 242, 242));
        Text16.setText("Text16");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Text5)
                            .addComponent(Text6)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Text14)
                                    .addComponent(Text8)
                                    .addComponent(TextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(ComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Text1)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(TextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
                                        .addComponent(TextField2, javax.swing.GroupLayout.Alignment.LEADING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Text9)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(ComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(Text2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Text3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Text4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextField3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextField4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Text11)
                        .addGap(257, 257, 257)
                        .addComponent(Text12)))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Text16)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Text15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Text10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ACEPTAR))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Text7)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(TextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Text13)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(TextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Text1)
                    .addComponent(Text9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Text2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Text3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Text4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Text5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Text6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Button2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Text7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Text8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Text14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Text11)
                    .addComponent(Text13)
                    .addComponent(Text12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Text16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ACEPTAR)
                    .addComponent(Text10, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Text15, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jPanel3AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        AltaPerfil.setBackground(new java.awt.Color(0, 204, 102));
        AltaPerfil.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AltaPerfil.setText("Alta de Perfil");
        AltaPerfil.setBorderPainted(false);
        AltaPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltaPerfilActionPerformed(evt);
            }
        });

        AltaAlbum.setBackground(new java.awt.Color(0, 204, 102));
        AltaAlbum.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AltaAlbum.setText("Alta de Album");
        AltaAlbum.setBorderPainted(false);
        AltaAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltaAlbumActionPerformed(evt);
            }
        });

        CrearLista.setBackground(new java.awt.Color(0, 204, 102));
        CrearLista.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        CrearLista.setText("Crear Lista");
        CrearLista.setBorderPainted(false);
        CrearLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CrearListaActionPerformed(evt);
            }
        });

        SeguirUsuario.setBackground(new java.awt.Color(0, 204, 102));
        SeguirUsuario.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SeguirUsuario.setText("Seguir Usuario");
        SeguirUsuario.setBorderPainted(false);
        SeguirUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeguirUsuarioActionPerformed(evt);
            }
        });

        DejarSeguir.setBackground(new java.awt.Color(0, 204, 102));
        DejarSeguir.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        DejarSeguir.setText("Dejar de Seguir");
        DejarSeguir.setBorderPainted(false);
        DejarSeguir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DejarSeguirActionPerformed(evt);
            }
        });

        GuardarTLA.setBackground(new java.awt.Color(0, 204, 102));
        GuardarTLA.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        GuardarTLA.setText("Guardar T/L/A");
        GuardarTLA.setBorderPainted(false);
        GuardarTLA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarTLAActionPerformed(evt);
            }
        });

        EliminarTLA.setBackground(new java.awt.Color(0, 204, 102));
        EliminarTLA.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        EliminarTLA.setText("Eliminar T/L/A");
        EliminarTLA.setBorderPainted(false);
        EliminarTLA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarTLAActionPerformed(evt);
            }
        });

        ConsultarPerfil.setBackground(new java.awt.Color(0, 204, 102));
        ConsultarPerfil.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ConsultarPerfil.setText("Consultar Perfil");
        ConsultarPerfil.setBorderPainted(false);
        ConsultarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarPerfilActionPerformed(evt);
            }
        });

        ConsultarAlbum.setBackground(new java.awt.Color(0, 204, 102));
        ConsultarAlbum.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ConsultarAlbum.setText("Consultar Album");
        ConsultarAlbum.setBorderPainted(false);
        ConsultarAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarAlbumActionPerformed(evt);
            }
        });

        ConsultarLista.setBackground(new java.awt.Color(0, 204, 102));
        ConsultarLista.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ConsultarLista.setText("Consultar Lista");
        ConsultarLista.setBorderPainted(false);
        ConsultarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarListaActionPerformed(evt);
            }
        });

        AltaGenero.setBackground(new java.awt.Color(0, 204, 102));
        AltaGenero.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AltaGenero.setText("Alta Genero");
        AltaGenero.setBorderPainted(false);
        AltaGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AltaGeneroActionPerformed(evt);
            }
        });

        AgregarTemasListas.setBackground(new java.awt.Color(0, 204, 102));
        AgregarTemasListas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        AgregarTemasListas.setText("Agregar Temas a Listas");
        AgregarTemasListas.setBorderPainted(false);
        AgregarTemasListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarTemasListasActionPerformed(evt);
            }
        });

        QuitarTemasListas.setBackground(new java.awt.Color(0, 204, 102));
        QuitarTemasListas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        QuitarTemasListas.setText("Quitar Temas a Listas");
        QuitarTemasListas.setBorderPainted(false);
        QuitarTemasListas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitarTemasListasActionPerformed(evt);
            }
        });

        PublicarLista.setBackground(new java.awt.Color(0, 204, 102));
        PublicarLista.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        PublicarLista.setText("Publicar Lista");
        PublicarLista.setBorderPainted(false);
        PublicarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PublicarListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AltaPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AltaAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CrearLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SeguirUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(DejarSeguir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(GuardarTLA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EliminarTLA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConsultarPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConsultarAlbum, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConsultarLista, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AltaGenero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AgregarTemasListas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                    .addComponent(QuitarTemasListas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PublicarLista, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(AltaPerfil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AltaGenero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AltaAlbum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CrearLista)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AgregarTemasListas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(QuitarTemasListas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PublicarLista)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SeguirUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DejarSeguir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(GuardarTLA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EliminarTLA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsultarPerfil)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsultarAlbum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ConsultarLista)
                .addContainerGap(398, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Logo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 998, Short.MAX_VALUE)
                        .addComponent(EXIT, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EXIT)
                    .addComponent(Logo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void hideAll() {
        //palabras
        
        Text1.setVisible(false);
        Text2.setVisible(false);
        Text3.setVisible(false);
        Text4.setVisible(false);
        Text5.setVisible(false);
        Text6.setVisible(false);
        Text7.setVisible(false);
        Text8.setVisible(false);
        Text9.setVisible(false);
        Text10.setVisible(false);
        Text11.setVisible(false);
        Text12.setVisible(false);
        Text13.setVisible(false);
        Text14.setVisible(false);
        Text15.setVisible(false);
        Text16.setVisible(false);
        
        //espacios de texto
        TextField1.setVisible(false);
        TextField2.setVisible(false);
        TextField3.setVisible(false);
        TextField4.setVisible(false);
        TextField5.setVisible(false);
        TextField6.setVisible(false);
        TextField7.setVisible(false);
        TextField8.setVisible(false);
        TextField9.setVisible(false);
        
        //textAreas
        TextArea1.setVisible(false);
        
        //selectores multiple opcoion(ComboBoxes)
        ComboBox1.setVisible(false);
        ComboBox2.setVisible(false);
        ComboBox3.setVisible(false);
        ComboBox4.setVisible(false);
        ComboBox5.setVisible(false);
        ComboBox6.setVisible(false);
        
        //botones
        ACEPTAR.setVisible(false);
        Button1.setVisible(false);
        Button2.setVisible(false);
        Button3.setVisible(false);
        Button4.setVisible(false);
        
        //vaciar comboboxes
        ComboBox1.removeAllItems();
        ComboBox2.removeAllItems();
        ComboBox3.removeAllItems();
        ComboBox4.removeAllItems();
        ComboBox5.removeAllItems();
        ComboBox6.removeAllItems();
        
        //vacia los espacios de texto
        TextField1.setText(null);
        TextField2.setText(null);
        TextField3.setText(null);
        TextField4.setText(null);
        TextField5.setText(null);
        TextField6.setText(null);
        TextField7.setText(null);
        TextField8.setText(null);
        TextField9.setText(null);
        
        //panel
        jPanel4.removeAll();
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel8.removeAll();
        jPanel8.setVisible(false);
        jPanel9.removeAll();
        jPanel9.setVisible(false);
        jPanel10.removeAll();
        jPanel10.setVisible(false);
        jPanel11.removeAll();
        jPanel11.setVisible(false);
        jPanel12.removeAll();
        jPanel12.setVisible(false);
        
        //Scroll
        jScrollPane1.setVisible(false);
        jScrollPane2.setVisible(false);
        jScrollPane3.setVisible(false);
        jScrollPane4.setVisible(false);
        jScrollPane5.setVisible(false);
        jScrollPane6.setVisible(false);
        
        //vacia los botones
        Button1.setText("");
        Button2.setText("");
        Button3.setText("");
        Button4.setText("");
    }
    
    private void AltaPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltaPerfilActionPerformed
        // TODO add your handling code here:
        hideAll();
        
        option = 1;

        //asignar palabras
        Text1.setText("Nickname:");
        Text2.setText("Nombre:");
        Text3.setText("Apellido:");
        Text4.setText("Correo:");
        Text5.setText("Fecha de Nacimiento:");
        Text6.setText("Tipo de Perfil:");
        Text16.setText("Biografia:");
        Text8.setText("PaginaWeb:");

        //asignar ComboBox
        ComboBox4.addItem("Cliente");
        ComboBox4.addItem("Artista");
        ComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(years));
        ComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(months));
        ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(days31));
        
        //setear visibilidad
        Text1.setVisible(true);
        Text2.setVisible(true);
        Text3.setVisible(true);
        Text4.setVisible(true);
        Text5.setVisible(true);
        Text6.setVisible(true);
        TextField1.setVisible(true);
        TextField2.setVisible(true);
        TextField3.setVisible(true);
        TextField4.setVisible(true);
        ComboBox1.setVisible(true);
        ComboBox2.setVisible(true);
        ComboBox3.setVisible(true);
        ComboBox4.setVisible(true);
        ACEPTAR.setVisible(true);
    }//GEN-LAST:event_AltaPerfilActionPerformed

    private void EXITActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITActionPerformed
        // TODO add your handling code here:
        setVisible(false);//la hace invisible
        dispose();//la cierra
    }//GEN-LAST:event_EXITActionPerformed

    private void AltaAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltaAlbumActionPerformed
        // TODO add your handling code here:
        hideAll();
        generosAlbum.clear(); //por las dudas
        temasAlbum.clear();
        option = 3;
        //jPanel2.setLayout(new GridLayout(0, 3, 10, 10)); // 3 columnas, número dinámico de filas
        ACEPTAR.setVisible(false);
        Text1.setText("Artista:");
        Text1.setVisible(true);
        TextField1.setVisible(true);
        Button1.setText("Confirmar");
        Button1.setVisible(true);
    }//GEN-LAST:event_AltaAlbumActionPerformed

    private void ComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox4ActionPerformed
        // TODO add your handling code here:
        ManejadorMusica mm = ManejadorMusica.getInstance();
        
        Object selectedItem = ComboBox4.getSelectedItem();
        if (selectedItem != null && !selectedItem.toString().isEmpty()) {
            String selectedText = selectedItem.toString();
            System.out.println("Selected item: " + selectedText);
            // Utiliza selectedText según sea necesario
        } else {
            System.out.println("No item selected or item is empty.");
        }
        if(option == 1){
            if (selectedItem != "Artista") {
                Text16.setVisible(false);
                jScrollPane6.setVisible(false);
                TextArea1.setVisible(false);
                Text8.setVisible(false);
                TextField6.setVisible(false);

            } else {
                Text16.setVisible(true);
                jScrollPane6.setVisible(true);
                TextArea1.setVisible(true);
                Text8.setVisible(true);
                TextField6.setVisible(true);
            }
        }
        if(option == 5){
            String selectedItem5 = ComboBox5.getSelectedItem().toString();
            if("Particular".equals(selectedItem5)){
            //lista de canciones 
            ComboBox6.removeAllItems();
            if(ComboBox6.getItemCount() > 0){
                 ComboBox6.addItem("");
            }
            for(Album alb : mm.getAlbumes()){//lista de albunes
                for(Tema tem : alb.getTemas()){//Los temas se almacenanan en albunes
                    ComboBox6.addItem(tem.getNombre());//No me importa saber el genero del tema ya que es una laylist particular
                }
            }
            ComboBox6.setVisible(true);
            }    
            if("Por Defecto".equals(selectedItem5)){
                //lista de canciones
                if(ComboBox6.getItemCount() > 0){
                    ComboBox6.removeAllItems();
                }
                String gen = ComboBox1.getSelectedItem().toString();//nombre del Genero
                Genero genero = mm.buscarGenero(gen);
                for(Album alb : mm.getAlbumes()){//lista de albunes
                    for (Tema tem : alb.getTemas()){//Los temas se almacenanan en albunes
                        for(Genero gene : tem.getGeneros()){//cada tema tiene a su vez una lista de genero
                                 if (gene.getNombre().equalsIgnoreCase(gen)){//El tema comparte el mismo genero que se seleciono anteriormente se agrega
                                    ComboBox6.addItem(tem.getNombre());
                                }
                           }
                    }
                }
                ComboBox6.setVisible(true);
            }
        }
        if(option == 6){
            String selectedItem5 = ComboBox5.getSelectedItem().toString();
            ManejadorUsuario mu = ManejadorUsuario.getInstance();       
            if("Particular".equals(selectedItem5)){
            //lista de canciones 
            ComboBox6.removeAllItems();
            if(ComboBox6.getItemCount() > 0){
                 ComboBox6.addItem("");
            }
            //Para mostrar que tema voy a quitar se puede buscar la lista que esta en la Comobox4
            String clie = ComboBox1.getSelectedItem() != null ? ComboBox1.getSelectedItem().toString() : "";//nick del cliente
            String NomPlaylist = ComboBox4.getSelectedItem() != null ? ComboBox4.getSelectedItem().toString() : "";//nombre de la playlist seleccionada
            Cliente cli = mu.buscarCliente(clie);//Cliente en particular
            if(cli != null){    
                List<Particular> playlistsParticulares = cli.getParticular(); // Lista de playlists del cliente
                for(Particular playlist :  playlistsParticulares){//recorro lista de particular
                    if(playlist.getNombre().equalsIgnoreCase(NomPlaylist)){//encuentro la playlist
                        for(Tema tem : playlist.getTemas()){
                            ComboBox6.addItem(tem.getNombre());
                        }
                        break;//Para que asi salga del siguiente for tambien
                    }
                }
            ComboBox6.setVisible(true);
            }
            }    
            if("Por Defecto".equals(selectedItem5)){
                //lista de canciones
                if(ComboBox6.getItemCount() > 0){
                    ComboBox6.removeAllItems();
                }
                //para mostrar que tema puedo quitar de una playlist porDefecto tengo que usar e el mp
                ManejadorPlaylist mp = ManejadorPlaylist.getInstance();
                String NomPlaylist = ComboBox4.getSelectedItem()!= null ? ComboBox4.getSelectedItem().toString() : "";//nombre de la playlist seleccionada
                for(porDefecto Def : mp.getListPorDefecto()){//recorro la lista de playlist porDefecto Almacenadas en el mp
                     if(Def.getNombre().equalsIgnoreCase(NomPlaylist)){//encuentro lista de playlist porDefecto
                         for(Tema tem : Def.getTemas()){
                            ComboBox6.addItem(tem.getNombre());
                        }
                        break;//Para que asi salga del siguiente for tambien
                     }
                }
                ComboBox6.setVisible(true);
            }
        }  
    }//GEN-LAST:event_ComboBox4ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
        hideAll();
    }//GEN-LAST:event_formWindowActivated

    private void AltaGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AltaGeneroActionPerformed
        ManejadorMusica mm = ManejadorMusica.getInstance();
        hideAll();
        option = 2;
        
        
        ACEPTAR.setVisible(true);
        Text1.setText("Nombre del Genero:");
        Text1.setVisible(true);
        
        Text9.setText("Genero Padre:");
        Text9.setVisible(true);
        TextField1.setVisible(true);
        ComboBox5.addItem("");
        if(mm.getGeneros() == null){
        }else{
            for (Genero gen: mm.getGeneros()){
                ComboBox5.addItem(gen.getNombre());
            }
        }
        ComboBox5.setVisible(true);
        
    }//GEN-LAST:event_AltaGeneroActionPerformed

    private void ComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox5ActionPerformed
        // TODO add your handling code here:
        ManejadorMusica mm = ManejadorMusica.getInstance();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        ManejadorPlaylist mp = ManejadorPlaylist.getInstance();
        
        Object selectedItem = ComboBox5.getSelectedItem();
        
        if (selectedItem != null && !selectedItem.toString().isEmpty()) {
            String selectedText = selectedItem.toString();
            System.out.println("Selected item: " + selectedText);
            // Utiliza selectedText según sea necesario
        } else {
            System.out.println("No item selected or item is empty.");
        }

        if (option == 4 && selectedItem == "Por defecto") {
            ComboBox1.removeAllItems();
            Text5.setText("Genero:");
            Text5.setVisible(true);
            for (Genero gen: mm.getGeneros()){
                ComboBox1.addItem(gen.getNombre());
            }
            ComboBox1.setVisible(true);
        } else {
            if (option == 4 && selectedItem == "Particular") {
                ComboBox1.removeAllItems();
                Text5.setText("Nombre del propietario:");
                Text5.setVisible(true);
                for (Cliente cli: mu.getAllCliente()){
                    ComboBox1.addItem(cli.getNickname());
                }
                ComboBox1.setVisible(true);
            } else {
                Text5.setVisible(false);
                ComboBox1.setVisible(false);
            }
        }
        
        if(option == 5){
            if("Particular".equals(selectedItem)){
            Text5.setText("Cliente:");
            Text6.setText("Lista:");
            Text14.setText("Cancion a Agrgar:");
            Text5.setVisible(true);
            Text6.setVisible(true);
            Text14.setVisible(true);
            //Cliente
            if (ComboBox1.getItemCount() > 0) {
                  ComboBox1.removeAllItems();
               } 
            for (Cliente cli: mu.getAllCliente()){
                ComboBox1.addItem(cli.getNickname());//Almacena todos los nick de los clientes
            }
               //Para que se vea
            if (ComboBox1.getItemCount() == 0) {
                   ComboBox1.addItem("");
               }
            }    
            if("Por Defecto".equals(selectedItem)){
                Text5.setText("Genero:");
                Text6.setText("Lista:");
                Text14.setText("Cancion a Agrgar:");
                Text5.setVisible(true);
                Text6.setVisible(true);
                Text14.setVisible(true);

                //Genero
                if (ComboBox1.getItemCount() > 0) {
                   ComboBox1.removeAllItems();
                } 
                 for (Genero gen: mm.getGeneros()){
                     ComboBox1.addItem(gen.getNombre());//Almacena todos los generos
                 }
                 //Para que se vea
                 if (ComboBox1.getItemCount() == 0) {
                        ComboBox1.addItem("");
                 }
                }
                ComboBox1.setVisible(true);
        } 
        
        if(option == 6){
             if("Particular".equals(selectedItem)){
               Text5.setText("Cliente:");
               Text6.setText("Lista:");
               Text14.setText("Cancion a Quitar:");
               Text5.setVisible(true);
               Text6.setVisible(true);
               Text14.setVisible(true);
               
               if (ComboBox1.getItemCount() > 0) {
                  ComboBox1.removeAllItems();
               } 
                for (Cliente cli: mu.getAllCliente()){
                    ComboBox1.addItem(cli.getNickname());//Almacena todos los nick de los clientes
                }
                   //Para que se vea
                if (ComboBox1.getItemCount() == 0) {
                       ComboBox1.addItem("");
                }
            }
             if("Por Defecto".equals(selectedItem)){
                Text5.setText("Genero:");
                Text6.setText("Lista:");
                Text14.setText("Cancion a Quitar:");
                Text5.setVisible(true);
                Text6.setVisible(true);
                Text14.setVisible(true);
                
                if (ComboBox1.getItemCount() > 0) {
                   ComboBox1.removeAllItems();
                } 
                 for (Genero gen: mm.getGeneros()){
                     ComboBox1.addItem(gen.getNombre());//Almacena todos los generos
                 }
                 //Para que se vea
                 if (ComboBox1.getItemCount() == 0) {
                        ComboBox1.addItem("");
                 }
                }
                ComboBox1.setVisible(true);
        }
        
        if(option == 7){
            String nickCliente = ComboBox5.getSelectedItem() != null ? ComboBox5.getSelectedItem().toString() : "";
            Cliente cliente = mu.buscarCliente(nickCliente);
            if(cliente!=null){
                Text5.setText("Listas:");
                ComboBox4.removeAllItems();
                for(Particular part : cliente.getParticular()){
                    if(part.getPrivado()){
                        ComboBox4.addItem(part.getNombre());
                    }
                }
                Button2.setText("Hacer Publica");

                Text5.setVisible(true);
                ComboBox4.setVisible(true);
                Button2.setVisible(true);
            }
        }
        
        if(option == 8){
            if(ComboBox1.getSelectedItem()=="Cliente"){    
                Text6.setText("Cliente a Seguir:");
                ComboBox4.removeAllItems();
                for (Cliente cli: mu.getAllCliente()){
                    if(cli.getNickname()!=selectedItem){
                        ComboBox4.addItem(cli.getNickname());
                    }else{
                        //no agregarlo a la lista
                    }
                }
            }else{
                Text6.setText("Artista a Seguir");
                ComboBox4.removeAllItems();
                for (Artista art: mu.getAllArtista()){
                    ComboBox4.addItem(art.getNickname());
                }
            }
            Text5.setVisible(true);
            ComboBox1.setVisible(true);
            Text6.setVisible(true);
            ComboBox4.setVisible(true);
        }
        
        if (option == 13) {
            if( selectedItem == "Artista"){
                ComboBox1.removeAllItems();
                Text5.setText("Artistas:");
                Text5.setVisible(true);
                for (Artista art : mu.getAllArtista()){
                    ComboBox1.addItem(art.getNickname());
                }
            }
            if( selectedItem == "Genero"){
                ComboBox1.removeAllItems();
                Text5.setText("Generos:");
                Text5.setVisible(true);
                for (Genero gen : mm.getGeneros()){
                    ComboBox1.addItem(gen.getNombre());
                }    
            }
            ComboBox1.setVisible(true);
        }
        
        if (option == 14) {
            if( selectedItem == "Cliente"){
                ComboBox1.removeAllItems();
                Text5.setText("Clientes:");
                Text5.setVisible(true);
                for (Cliente cli : mu.getAllCliente()){
                    ComboBox1.addItem(cli.getNickname());
                }  
            
            }
            if( selectedItem == "Genero"){
                ComboBox1.removeAllItems();
                Text5.setText("Generos:");
                Text5.setVisible(true);
                for (Genero gen : mm.getGeneros()){
                    ComboBox1.addItem(gen.getNombre());
                } 
            }
            ComboBox1.setVisible(true);
        }
    }//GEN-LAST:event_ComboBox5ActionPerformed

    private void CrearListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CrearListaActionPerformed
        // TODO add your handling code here:
        hideAll();
        option = 4;

        Text1.setText("Nombre de la Lista:");
        Text1.setVisible(true);
        TextField1.setVisible(true);
        ComboBox5.addItem("Por defecto");
        ComboBox5.addItem("Particular");
        Text9.setText("Tipo de Lista:");
        Text9.setVisible(true);
        ComboBox5.setVisible(true);
        ACEPTAR.setVisible(true);
    }//GEN-LAST:event_CrearListaActionPerformed

    private void SeguirUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeguirUsuarioActionPerformed
        // TODO add your handling code here:
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        hideAll();
        
        option = 8;
        
        Text9.setText("Cliente:");
        Text5.setText("Tipo de Usuario a Seguir:");
        Text6.setText("Cliente a Seguir:");
        Text9.setVisible(true);
        Text5.setVisible(true);
        Text6.setVisible(true);
        for (Cliente cli: mu.getAllCliente()){
            ComboBox5.addItem(cli.getNickname());
        }
        ComboBox1.removeAllItems();
        ComboBox1.addItem("Cliente");
        ComboBox1.addItem("Artista");
        ComboBox5.setVisible(true);
        ComboBox1.setVisible(true);
        ComboBox4.setVisible(true);
        ACEPTAR.setVisible(true);
    }//GEN-LAST:event_SeguirUsuarioActionPerformed

    private void DejarSeguirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DejarSeguirActionPerformed
        // TODO add your handling code here:
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        hideAll();
        
        option = 9;
        
        Text9.setText("Cliente:");
        Text5.setText("Usuario a dejar de Seguir:");
        Text9.setVisible(true);
        Text5.setVisible(true);
        ComboBox5.setVisible(true);for (Cliente cli: mu.getAllCliente()){
            ComboBox5.addItem(cli.getNickname());
        }
        ACEPTAR.setVisible(true);
    }//GEN-LAST:event_DejarSeguirActionPerformed

    private void GuardarTLAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarTLAActionPerformed
        // TODO add your handling code here:
        hideAll();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        option = 10;

        Text6.setText("Cliente:");
        for(Cliente cli : mu.getAllCliente()){
            ComboBox4.addItem(cli.getNickname());
        }
        Text6.setVisible(true);
        ComboBox4.setVisible(true);
       
        Text14.setText("Que desea agregar a favoritos?");
        
        ComboBox6.addItem("Tema");
        ComboBox6.addItem("Lista");
        ComboBox6.addItem("Album");
        Text14.setVisible(true);
        ComboBox6.setVisible(true);
        
    }//GEN-LAST:event_GuardarTLAActionPerformed

    private void EliminarTLAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarTLAActionPerformed
        // TODO add your handling code here:
        hideAll();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        option = 11;

        Text9.setText("Cliente:");
        for(Cliente cli : mu.getAllCliente()){
            ComboBox5.addItem(cli.getNickname());
        }
        Button1.setText("Seleccionar");
        Text9.setVisible(true);
        ComboBox5.setVisible(true);
        Button1.setVisible(true);
        
         
        Text5.setText("Que desea eliminar de favoritos?"); //se usa despues
        ComboBox1.addItem("Tema");
        ComboBox1.addItem("Lista");
        ComboBox1.addItem("Album");
        
        Text14.setVisible(false);
        ComboBox6.setVisible(false);
    }//GEN-LAST:event_EliminarTLAActionPerformed

    private void ConsultarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarPerfilActionPerformed
        // TODO add your handling code here:
        hideAll();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        option = 12;

        Text9.setText("Cliente:");
        Text9.setVisible(true);
        for (Cliente cli: mu.getAllCliente()){
            ComboBox5.addItem(cli.getNickname());  
        }
        ComboBox5.setVisible(true);
        Button4.setVisible(true);
    }//GEN-LAST:event_ConsultarPerfilActionPerformed

    private void ConsultarAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarAlbumActionPerformed
        // TODO add your handling code here:
        hideAll();
        option = 13;

        Text9.setText("Filtrar por:");
        
        ComboBox5.addItem("Genero");
        ComboBox5.addItem("Artista");
        Text9.setVisible(true);
        
        ComboBox5.setVisible(true);
        
        
        
    }//GEN-LAST:event_ConsultarAlbumActionPerformed

    private void ConsultarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarListaActionPerformed
        // TODO add your handling code here:
        hideAll();
        option = 14;
        Text9.setText("Filtrar por:");
        ComboBox5.addItem("Genero");
        ComboBox5.addItem("Cliente");
        Text9.setVisible(true);
       
        ComboBox5.setVisible(true);
        
    }//GEN-LAST:event_ConsultarListaActionPerformed

    private void Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button1ActionPerformed
        // TODO add your handling code here:
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        ManejadorMusica mm = ManejadorMusica.getInstance();
        
        if(option ==  3){
            if (TextField1.getText().isEmpty()) {
                Text10.setText("ERROR: campo Artista vacio");
                Text10.setVisible(true);
                Text15.setVisible(false);
            }else{
                if(mu.buscarArtista(TextField1.getText())==null){
                Text10.setText("Error, artista "+TextField1.getText()+" no existe");
                Text10.setVisible(true);
                Text15.setVisible(false);
                }else {
                    Text10.setVisible(false);
                    Text3.setText("Nombre del Album:");
                    Text5.setText("Año de salida:");
                    Text6.setText("Genero:");
                    Button2.setText("Agregar Genero");
                    Button3.setText("Agregar Cancion");
                    Text3.setVisible(true);
                    Text5.setVisible(true);
                    Text6.setVisible(true);

                    TextField3.setVisible(true);
                    ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(years));
                    ComboBox1.setVisible(true);
                    
                    for (Genero gen: mm.getGeneros()){
                        ComboBox4.addItem(gen.getNombre());
                    }
                    ComboBox4.setVisible(true);
                    Button2.setVisible(true);
                    Button3.setVisible(true);

                    Text11.setText("Nombre");
                    Text12.setText("Duracion (xx:xx)");
                    Text13.setText("Posicion en el Album");
                    Text11.setVisible(true);
                    Text12.setVisible(true);
                    Text13.setVisible(true);

                    TextField7.setVisible(true);
                    TextField8.setVisible(true);
                    TextField9.setVisible(true);

                    ACEPTAR.setVisible(true);

                }
            }
        }
        
        if(option==11){
            Text5.setVisible(true);
            ComboBox1.setVisible(true);
        }
    }//GEN-LAST:event_Button1ActionPerformed

    private void ComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox1ActionPerformed
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        ManejadorMusica mm = ManejadorMusica.getInstance();
        ManejadorPlaylist mp = ManejadorPlaylist.getInstance();
        Object selectedItem = ComboBox1.getSelectedItem();
        String selectedItem5 = ComboBox5.getSelectedItem() != null ? ComboBox5.getSelectedItem().toString() : ""; 
        String texto5 = Text5.getText();
        
        
        if (selectedItem != null && !selectedItem.toString().isEmpty()) {
            String selectedText = selectedItem.toString();
            System.out.println("Selected item: " + selectedText);
            // Utiliza selectedText según sea necesario
        } else {
            System.out.println("No item selected or item is empty.");
        }
        
        
        if (option == 4 && selectedItem == "Por defecto") {
            ComboBox4.removeAllItems();
            Text6.setText("Genero:");
            //ComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(genders));
            Text6.setVisible(true);
            ComboBox4.setVisible(true);
        }
        if(option == 5 || option == 6){//En este caso tanto agegar como quitar muestran las playlist de la misma manera
            if("Particular".equals(selectedItem5)){
                if(ComboBox4.getItemCount() > 0){
                    ComboBox4.removeAllItems();
                }
                ComboBox4.addItem("");
                String clie = ComboBox1.getSelectedItem() != null ? ComboBox1.getSelectedItem().toString() : "";//nick del cliente
                Cliente cli = mu.buscarCliente(clie);//Cliente en particular
                // Verifica si el cliente fue encontrado
                if (cli != null) {//existe el cliente
                    List<Particular> playlistsParticulares = cli.getParticular(); // Lista de playlists del cliente
                    // Agrega los nombres de las playlists al ComboBox
                    for(Particular playlist :  playlistsParticulares){
                        ComboBox4.addItem(playlist.getNombre());
                    }

                }
                ComboBox4.setVisible(true);
            }
            if("Por Defecto".equals(selectedItem5)){
                if(ComboBox4.getItemCount() > 0){
                    ComboBox4.removeAllItems();
                }
                ComboBox4.addItem("");
                String gen = ComboBox1.getSelectedItem().toString();//nombre del Genero
                Genero genero = mm.buscarGenero(gen);
                if(genero != null){//genero existe
                   for (porDefecto playlist : mp.getListPorDefecto()){//Lista de playlist porDefecto
                       if (playlist.getGenero().getNombre().equalsIgnoreCase(gen)) {
                            ComboBox4.addItem(playlist.getNombre());
                        }
                   }
                }  
                ComboBox4.setVisible(true); 
            }
        }
        
        
        if(option == 8){
            if(selectedItem=="Cliente"){    
                Text6.setText("Cliente a Seguir:");
                ComboBox4.removeAllItems();
                for (Cliente cli: mu.getAllCliente()){
                    if(cli.getNickname()!=ComboBox5.getSelectedItem()){
                        ComboBox4.addItem(cli.getNickname());
                    }else{
                        //no agregarlo a la lista
                    }
                }
            }else{
                Text6.setText("Artista a Seguir");
                ComboBox4.removeAllItems();
                for (Artista art: mu.getAllArtista()){
                    ComboBox4.addItem(art.getNickname());
                }
            }
            Text5.setVisible(true);
            ComboBox1.setVisible(true);
            Text6.setVisible(true);
            ComboBox4.setVisible(true);
        }
        
        if(option==11){
            
            String textoBox1 = ComboBox1.getSelectedItem()!= null ? ComboBox1.getSelectedItem().toString() : "";
            String nickCliente = ComboBox5.getSelectedItem()!= null ? ComboBox5.getSelectedItem().toString() : "";
            Cliente cliente = mu.buscarCliente(nickCliente);
            
            if(textoBox1.equalsIgnoreCase("Tema")){
                Text14.setText("Temas Favoritos:");
                ComboBox6.removeAllItems();
                for(Tema tem : cliente.getTemasFAV()){
                    ComboBox6.addItem(tem.getNombre());
                }
            }
            
            if(textoBox1.equalsIgnoreCase("Lista")){
                Text14.setText("Listas Favoritos:");
                ComboBox6.removeAllItems();
                for(Particular part : cliente.getPlayFavPart()){
                    ComboBox6.addItem(part.getNombre());
                }
                for(porDefecto pd : cliente.getPlayFavPD()){
                    ComboBox6.addItem(pd.getNombre());
                }
            }
            if(textoBox1.equalsIgnoreCase("Album")){
                Text14.setText("Albumes Favoritos:");
                ComboBox6.removeAllItems();
                for(Album alb : cliente.getAlbumFav()){
                    ComboBox6.addItem(alb.getNombre());
                }
            }
            
            Text14.setVisible(true);
            ComboBox6.setVisible(true);
            ACEPTAR.setVisible(true);
        }
        if (option == 13){
            if(texto5.equalsIgnoreCase("Artistas:")){
                String nickArt = selectedItem != null ? selectedItem.toString() : "";

                Artista art = mu.buscarArtista(nickArt);
                
                Text6.setText("Album:");
                Button2.setText("Seleccionar");
                for (Album alb : art.getAlbumes()){
                    ComboBox4.addItem(alb.getNombre());
                }
            }
            if (texto5.equalsIgnoreCase("Generos:")){
                String nomGen = selectedItem != null ? selectedItem.toString() : "";

                Genero gen = mm.buscarGenero(nomGen);
                
                Text6.setText("Album:");
                Button2.setText("Seleccionar");
                for (Album alb : mm.getAlbumes()){
                    if(alb.getGeneros().contains(gen)){
                        ComboBox4.addItem(alb.getNombre());
                    }
                }
            }
            ComboBox4.setVisible(true);
            Text6.setVisible(true);
            Button2.setVisible(true);
        }
        
        if (option == 14){
            if(texto5.equalsIgnoreCase("Clientes:")){
                String nickCli = selectedItem != null ? selectedItem.toString() : "";

                Cliente cli = mu.buscarCliente(nickCli);
                
                Text6.setText("Listas:");
                Button2.setText("Seleccionar");
                for (Particular part : cli.getParticular()){
                    ComboBox4.addItem(part.getNombre());
                }
            }
            if (texto5.equalsIgnoreCase("Generos:")){
                String nomGen = selectedItem != null ? selectedItem.toString() : "";

                
                Text6.setText("Listas:");
                Button2.setText("Seleccionar");
                for (porDefecto pordef : mp.getListPorDefecto()){
                    if(pordef.getGenero().getNombre().equalsIgnoreCase(nomGen)){
                        ComboBox4.addItem(pordef.getNombre());
                    }
                }
            }
            ComboBox4.setVisible(true);
            Text6.setVisible(true);
            Button2.setVisible(true);
        }
        
        
    }//GEN-LAST:event_ComboBox1ActionPerformed

    private void ComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox2ActionPerformed
        // TODO add your handling code here:
        Object selectedItem = ComboBox2.getSelectedItem();
        if (selectedItem != null && !selectedItem.toString().isEmpty()) {
            String selectedText = selectedItem.toString();
            System.out.println("Selected item: " + selectedText);
            // Utiliza selectedText según sea necesario
        } else {
            System.out.println("No item selected or item is empty.");
        }

        if (selectedItem == "Febrero") {
            //ComboBox1.removeAllItems();
            ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(days29));
        } else {
            if (selectedItem == "Abril" || selectedItem == "Junio" || selectedItem == "Setiembre" || selectedItem == "Noviembre") {
                //ComboBox1.removeAllItems();
                ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(days30));
            } else {
                //ComboBox1.removeAllItems();
                ComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(days31));
            }
        }
    }//GEN-LAST:event_ComboBox2ActionPerformed

    private void ComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox3ActionPerformed
        // TODO add your handling code here:
        Object selectedItem = ComboBox3.getSelectedItem();
        if (selectedItem != null && !selectedItem.toString().isEmpty()) {
            String selectedText = selectedItem.toString();
            System.out.println("Selected item: " + selectedText);
            // Utiliza selectedText según sea necesario
        } else {
            System.out.println("No item selected or item is empty.");
        }
    }//GEN-LAST:event_ComboBox3ActionPerformed

    private void AgregarTemasListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarTemasListasActionPerformed
        // TODO add your handling code here:
        hideAll();
        option = 5;

        Text9.setText("Tipo de Lista:");
        Text9.setVisible(true);
       
        /*Text5.setText("Lista:");
        Text6.setText("Cancion a Agrgar:");
        Text5.setVisible(true);
        Text6.setVisible(true);*/
        
        ComboBox5.addItem("Particular");
        ComboBox5.addItem("Por Defecto");
        ComboBox5.setVisible(true);
        ComboBox1.setVisible(true);
        ComboBox4.setVisible(true);
        
        ACEPTAR.setVisible(true);
    }//GEN-LAST:event_AgregarTemasListasActionPerformed

    private void QuitarTemasListasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitarTemasListasActionPerformed
        // TODO add your handling code here:
        hideAll();
        option = 6;

        Text9.setText("Tipo de Lista:"); 
        Text9.setVisible(true);
        /*Text5.setText("Lista:");
        Text6.setText("Cancion a Agrgar:");
        Text5.setVisible(true);
        Text6.setVisible(true);*/

        //ComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(clients));
        ComboBox5.addItem("Particular");
        ComboBox5.addItem("Por Defecto");
        ComboBox5.setVisible(true);
        ComboBox1.setVisible(true);
        ComboBox4.setVisible(true);
        ACEPTAR.setVisible(true);
        
    }//GEN-LAST:event_QuitarTemasListasActionPerformed

    private void PublicarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PublicarListaActionPerformed
        // TODO add your handling code here:
        hideAll();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        option = 7;

        Text9.setText("Propietario:");
        
        for(Cliente cli : mu.getAllCliente()){
                ComboBox5.addItem(cli.getNombre());
            }
        ComboBox5.setVisible(true);
        
        Text9.setVisible(true);
        
    }//GEN-LAST:event_PublicarListaActionPerformed

    private void ComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBox6ActionPerformed
        // TODO add your handling code here:
        Object selectedItem = ComboBox6.getSelectedItem();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        if (selectedItem != null && !selectedItem.toString().isEmpty()) {
            String selectedText = selectedItem.toString();
            System.out.println("Selected item: " + selectedText);
            // Utiliza selectedText según sea necesario
        } else {
            System.out.println("No item selected or item is empty.");
        }

        if(option==10){
            
            if (selectedItem == "Tema") {
                Text11.setText("Ingresar Tema");   
            }
            
            if (selectedItem == "Lista") {
                Text11.setText("Ingresar Lista");
            }
            
            if (selectedItem == "Album") {
                Text11.setText("Ingresar Album");
            }
                
            Text11.setVisible(true);
            TextField7.setText("");
            TextField7.setVisible(true);
            Button3.setText("Agregar Favorito");
            Button3.setVisible(true);
        }
        
        
    }//GEN-LAST:event_ComboBox6ActionPerformed

    private void TextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField3ActionPerformed

    private void ACEPTARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ACEPTARActionPerformed
        ManejadorMusica mm = ManejadorMusica.getInstance();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        ManejadorPlaylist mp = ManejadorPlaylist.getInstance();
        // TODO add your handling code here:
        switch(option){
            case 1:
                String nickname = TextField1.getText();
                String nombre = TextField2.getText();
                String apellido = TextField3.getText();
                String correo = TextField4.getText();
                String biografia = TextArea1.getText();
                String pagina = TextField6.getText();
                Object diasObj = ComboBox1.getSelectedItem();
                Object mesesObj = ComboBox2.getSelectedItem();
                Object aniosObj = ComboBox3.getSelectedItem();

                // Validar campos
                if (nickname.isEmpty()) {
                    Text10.setText("ERROR: campo Nickname vacio");
                    Text15.setVisible(false);
                    Text10.setVisible(true);
                } else if (nombre.isEmpty()) {
                    Text10.setText("ERROR: campo Nombre vacio");
                    Text15.setVisible(false);
                    Text10.setVisible(true);
                } else if (apellido.isEmpty()) {
                    Text10.setText("ERROR: campo Apellido vacio");
                    Text15.setVisible(false);
                    Text10.setVisible(true);
                } else if (correo.isEmpty()) {
                    Text10.setText("ERROR: campo Correo vacio");
                    Text15.setVisible(false);
                    Text10.setVisible(true);
                } else {
                    boolean isArtista = ComboBox4.getSelectedItem().equals("Artista");
                    if (isArtista) {
                        if (biografia.isEmpty()) {
                            Text10.setText("ERROR: campo Biografia vacio");
                            Text15.setVisible(false);
                            Text10.setVisible(true);
                        } else if (pagina.isEmpty()) {
                            Text10.setText("ERROR: campo Pagina web vacio");
                            Text15.setVisible(false);
                            Text10.setVisible(true);
                        } else {
                            boolean  encontre = false;
                            for (Cliente cli: mu.getAllCliente()){
                                if(nickname.equals(cli.getNickname())){
                                encontre = true;
                                }else{
                                //no  hacer  nada
                                }
                            }
                            for (Artista art: mu.getAllArtista()){
                                if(nickname.equals(art.getNickname())){
                                encontre = true;
                                }else{
                                //no  hacer  nada
                                }
                            }
                            if(encontre){
                                Text15.setVisible(false);
                                Text10.setText("ERROR: usuario "+nickname+" ya existe");
                                Text10.setVisible(true);
                            }else{
                                Text10.setVisible(false);
                                Text15.setText("Ingresado con exito");
                                Text15.setVisible(true);
                                Espotify.AltaUsuario altaUsuario = new Espotify.AltaUsuario(IC,nickname, nombre, apellido, correo, diasObj, mesesObj, aniosObj, biografia, pagina);
                            }
                        }
                    } else {
                        boolean  encontre = false;
                        for (Cliente cli: mu.getAllCliente()){
                            if(nickname.equals(cli.getNickname())){
                                encontre = true;
                            }else{
                                //no  hacer  nada
                            }
                        }
                        for (Artista art: mu.getAllArtista()){
                            if(nickname.equals(art.getNickname())){
                                encontre = true;
                            }else{
                                //no  hacer  nada
                            }
                        }
                        if(encontre){
                            Text15.setVisible(false);
                            Text10.setText("ERROR: usuario "+nickname+" ya existe");
                            Text10.setVisible(true);
                        }else{
                            Text10.setVisible(false);
                            Text15.setText("Ingresado con exito");
                            Text15.setVisible(true);
                            Espotify.AltaUsuario altaUsuario = new Espotify.AltaUsuario(IC,nickname, nombre, apellido, correo, diasObj, mesesObj, aniosObj, null, null);
                        }
                    }
                }
            break;
            case 2:
                
                String nombreGenero = TextField1.getText();
                String nombrePadre = ComboBox5.getSelectedItem().toString();
                
                if (TextField1.getText().isEmpty()) {
                    Text10.setText("ERROR: campo Nombre vacio");
                    Text10.setVisible(true);
                    Text15.setVisible(false);
                }else{
                    if(mm.buscarGenero(TextField1.getText())!=null){
                    Text10.setText("Error, genero "+TextField1.getText()+" ya existe");
                    Text10.setVisible(true);
                    Text15.setVisible(false);
                    }else{
                        Text10.setVisible(false);
                        Text15.setText("Ingresado con exito");
                        Text15.setVisible(true);
                        Espotify.AltaGenero altaGenero = new Espotify.AltaGenero(IC,nombreGenero,nombrePadre);
                    }
                }
                
            break;
            case 3:
                
                String nombreArtista = TextField1.getText();
                String nombreAlbum = TextField3.getText();
                String anio = ComboBox1.getSelectedItem().toString();
                int anioCreacion = Integer.parseInt((String) anio);
                
                if (TextField1.getText().isEmpty()) {
                    Text10.setText("ERROR: campo Nombre vacio");
                    Text10.setVisible(true);
                    Text15.setVisible(false);
                }else{
                        Text10.setVisible(false);
                        Text15.setText("Ingresado con exito");
                        Text15.setVisible(true);
                        Espotify.AltaAlbum altaAlbum = new AltaAlbum (IC, nombreArtista, nombreAlbum, anioCreacion, generosAlbum, temasAlbum);
                        
                        for (Tema tem : temasAlbum){
                            mm.addTema(tem);
                        }
                        temasAlbum.clear();
                        generosAlbum.clear();
                }
                
            break;
            case 4:
                //llamarCrearLista();
               
                String name = TextField1.getText();
                
                if(name.isEmpty()){//Caso que Ingrese vacio 
                    Text10.setText("ERROR: campo Nombre vacio");
                    Text10.setVisible(true);
                }else{
                    String Tipo = ComboBox5.getSelectedItem().toString();//Particular o por defecto
                    String GoC =  ComboBox1.getSelectedItem().toString();//Genero o Cliente
                    //Preguntar si la playlist ya existe
                    if("Particular".equals(Tipo)){
                        List<Particular> Par = mp.getListParticular();
                        boolean existe = false; // Bandera para verificar la existencia
                        for (Particular playlist : Par) {
                            if (playlist.getNombre().equals(name)) { // Comparar el nombre de la playlist
                                existe = true; // Si existe, marca como verdadero
                                break; // Salir del bucle, no necesitamos seguir buscando
                            }
                        }
                        if(existe == false){
                            Espotify.CrearLista crearlista = new CrearLista(IC, name, Tipo, GoC);   
                            Text15.setText("Ingresado con exito");
                            Text15.setVisible(true);
                        }else{
                            Text10.setText("ERROR: La playlist Particular ya existe");
                            Text10.setVisible(true);
                        }
                    }else{//Caso en genero
                        List<porDefecto> Def = mp.getListPorDefecto();
                        boolean existe = false; // Bandera para verificar la existencia
                        for(porDefecto playlist : Def){
                            if(playlist.getNombre().equals(name)){
                               existe = true; // Si existe, marca como verdadero
                                break; // Salir del bucle, no necesitamos seguir buscando 
                            }
                        }
                        if(existe == false){
                            Espotify.CrearLista crearlista = new CrearLista(IC, name, Tipo, GoC);   
                            Text15.setText("Ingresado con exito");
                            Text15.setVisible(true);
                        }else{
                            Text10.setText("ERROR: La playlist PorDefecto ya existe");
                            Text10.setVisible(true);
                        }
                    }
                    
                }
            break;
            case 5:
                //llamarAgregarTemasLista();
                //Controlar que selecione todas las comboBox(1,4 y 6) con algo
                if(ComboBox1.getSelectedItem() == null || ComboBox4.getSelectedItem() == null || ComboBox6.getSelectedItem() == null){
                    Text10.setText("ERROR: Selecione todos los campos");
                    Text10.setVisible(true);
                }
               
                //Controlar el tema no se repita en la playlist
                 String Tipo = ComboBox5.getSelectedItem().toString();//Entre porDefecto y particular(me ahorro buscar en las 2 listas
                 String NomPlay = ComboBox4.getSelectedItem().toString();//Nombre de la playlist
                 String NomTema = ComboBox6.getSelectedItem().toString();//Nombre del tema
                  if("Particular".equals(Tipo)){
                     String nom = ComboBox1.getSelectedItem().toString();//nick del cliente
                        Cliente cliente = mu.buscarCliente(nom);//Cliente en particular
                        // Verifica si el cliente fue encontrado
                        boolean existe = false;
                        for(Particular playlist : cliente.getParticular()){//Lista de playlist particulares del cliente
                            if(playlist.getNombre().equalsIgnoreCase(NomPlay)){//encuentro la playlist
                               for(Tema tem : playlist.getTemas()){
                                   if(tem.getNombre().equalsIgnoreCase(NomTema)){//encuentra el tema seleccionado en la lista de temas de la playlist
                                       existe = true;
                                       break;
                                   }
                               }
                            }
                            if(existe == true){
                                break;
                            }
                        }
                        if(existe == false){//no existe el tema en esa lista de temas de esa lista particular del cliente
                            Espotify.AgregarTemasLista agregartemaslista = new AgregarTemasLista(Tipo, NomPlay, NomTema, nom);   
                            Text15.setText("Ingresado con exito");
                            Text15.setVisible(true);
                        }else{
                            Text10.setText("ERROR: La cancion selecionada ya existe dentro de la Playlist");
                            Text10.setVisible(true);
                        }
                  }
                  if("Por Defecto".equals(Tipo)){
                      //ManejadorPlaylist mp = ManejadorPlaylist.getInstance();
                       String nom = ComboBox1.getSelectedItem().toString();//nombre del Genero
                       boolean existe = false;
                       for(porDefecto Def : mp.getListPorDefecto()){
                            if(Def.getNombre().equalsIgnoreCase(NomPlay)){//encuentro la playlist
                               for(Tema tem : Def.getTemas()){
                                   if(tem.getNombre().equalsIgnoreCase(NomTema)){//encuentra el tema seleccionado en la lista de temas de la playlist
                                       existe = true;
                                       break;
                                   }
                               }
                            }
                            if(existe == true){
                                break;
                            }
                        }
                        if(existe == false){//no existe el tema en esa lista de temas de esa lista particular del cliente
                            Espotify.AgregarTemasLista agregartemaslista = new AgregarTemasLista( Tipo, NomPlay, NomTema, nom );   
                            Text15.setText("Ingresado con exito");
                            Text15.setVisible(true);
                        }else{
                            Text10.setText("ERROR: La cancion selecionada ya existe dentro de la Playlist");
                            Text10.setVisible(true);
                        }
                  }
            break;
            case 6:
                //llamarQuitarTemasLista();
                //Controlar que selecione todas las comboBox(1,4 y 6) con algo
                if(ComboBox1.getSelectedItem() == null || ComboBox4.getSelectedItem() == null || ComboBox6.getSelectedItem() == null){
                    Text10.setText("ERROR: Selecione todos los campos");
                    Text10.setVisible(true);
                }
                Tipo = ComboBox5.getSelectedItem().toString();//Entre porDefecto y particular(me ahorro buscar en las 2 listas
                NomPlay = ComboBox4.getSelectedItem().toString();//Nombre de la playlist
                NomTema = ComboBox6.getSelectedItem().toString();//Nombre del tema
                  if("Particular".equals(Tipo)){
                     String nom = ComboBox1.getSelectedItem().toString();//nick del cliente
                        Cliente cliente = mu.buscarCliente(nom);//Cliente en particular
                        boolean existe = false;
                        for(Particular playlist : cliente.getParticular()){//Lista de playlist particulares del cliente
                            if(playlist.getNombre().equalsIgnoreCase(NomPlay)){//encuentro la playlist
                               for(Tema tem : playlist.getTemas()){
                                   if(tem.getNombre().equalsIgnoreCase(NomTema)){//encuentra el tema seleccionado en la lista de temas de la playlist
                                       existe = true;
                                       break;
                                   }
                               }
                            }
                            if(existe == true){
                                break;
                            }
                        }
                        if(existe == false){//no existe el tema en esa lista de temas de esa lista particular del cliente
                            Espotify.QuitarTemasLista quitarTemaLista = new QuitarTemasLista( Tipo, NomPlay, NomTema, nom);   
                            Text15.setText("Ingresado con exito");
                            Text15.setVisible(true);
                        }else{
                            Text10.setText("ERROR: La cancion selecionada ya existe dentro de la Playlist");
                            Text10.setVisible(true);
                        }
                  }
                  if("Por Defecto".equals(Tipo)){
                      //ManejadorPlaylist mp = ManejadorPlaylist.getInstance();
                       String nom = ComboBox1.getSelectedItem().toString();//nombre del Genero
                       boolean existe = false;
                       for(porDefecto Def : mp.getListPorDefecto()){
                            if(Def.getNombre().equalsIgnoreCase(NomPlay)){//encuentro la playlist
                               for(Tema tem : Def.getTemas()){
                                   if(tem.getNombre().equalsIgnoreCase(NomTema)){//encuentra el tema seleccionado en la lista de temas de la playlist
                                       existe = true;
                                       break;
                                   }
                               }
                            }
                            if(existe == true){
                                break;
                            }
                        }
                        if(existe == false){//no existe el tema en esa lista de temas de esa lista particular del cliente
                            Espotify.QuitarTemasLista quitarTemaLista = new QuitarTemasLista(Tipo, NomPlay, NomTema, nom );   
                            Text15.setText("Ingresado con exito");
                            Text15.setVisible(true);
                        }else{
                            Text10.setText("ERROR: La cancion selecionada ya existe dentro de la Playlist");
                            Text10.setVisible(true);
                        }
                  }
            break;
            case 7:
                //llamarPublicarLista();
            break;
            case 8:
                //llamarSeguirUsuario();
                String seguidor = ComboBox5.getSelectedItem().toString();
                String cliente = ComboBox1.getSelectedItem().toString();
                
                if(cliente.isEmpty()){
                    Text10.setText("ERROR: no se eligio cliente");
                    Text10.setVisible(true);
                    Text15.setVisible(false);
                }else if(seguidor.isEmpty()){
                    Text10.setText("ERROR: no se eligio seguidor");
                    Text10.setVisible(true);
                    Text15.setVisible(false);
                }else{
                    boolean encontre = false;
                    for (Cliente cli : mu.getAllCliente()) {
                        if (cliente.equals(cli.getNickname())) {
                            encontre = true;
                        } else {
                            //no  hacer  nada
                        }
                    }
                    for (Artista art : mu.getAllArtista()) {
                        if (cliente.equals(art.getNickname())){
                            encontre = false;
                        } else {
                            //no  hacer  nada
                        }
                    }
                    if (encontre) {
                        Text10.setVisible(false);
                        Text15.setText("Se sigui a "+cliente+" con exito");
                        Text15.setVisible(true);
                        Espotify.AltaSeguirUsuario seguirUsr = new Espotify.AltaSeguirUsuario(IC, cliente, seguidor);
                    } else {
                        Text10.setVisible(false);
                        Text15.setText("Se sigui a "+cliente+" con exito");
                        Text15.setVisible(true);
                        Espotify.AltaSeguirUsuario seguirUsr = new Espotify.AltaSeguirUsuario(IC, cliente, seguidor);
                    }
                }
            break;
            case 9:
                //llamarDejarSeguirUsuario();
                String seguidor1 = ComboBox5.getSelectedItem().toString();
                String cliente1 = ComboBox1.getSelectedItem().toString();
                
                if(cliente1.isEmpty()){
                    Text10.setText("ERROR: no se eligio cliente");
                    Text10.setVisible(true);
                    Text15.setVisible(false);
                }else if(seguidor1.isEmpty()){
                    Text10.setText("ERROR: no se eligio seguidor");
                    Text10.setVisible(true);
                    Text15.setVisible(false);
                }else{
                   Text10.setVisible(false);
                   Text15.setText("Se agregó seguidor con exito"); 
                   Text15.setVisible(true);
                   Espotify.AltaDejarSeguir noSeguir = new Espotify.AltaDejarSeguir(IC, cliente1, seguidor1);
                }
            break;
            case 10:
                //llamarGuardarTLA();
            break;
            case 11:
                //llamarEliminarTLA();
                String textoBox1 = ComboBox1.getSelectedItem().toString();
                String textoBox6 = ComboBox6.getSelectedItem().toString();
                String nickCliente = ComboBox5.getSelectedItem().toString();
                Cliente cli = mu.buscarCliente(nickCliente);
                
                if (textoBox1.equalsIgnoreCase("Tema")) {
                Tema tem = cli.buscarTemaFav(textoBox6);
                    if(cli.buscarTemaFav(textoBox6)!=null){
                        Text10.setVisible(false);
                        Text15.setText("Tema eliminado de favoritos del cliente");
                        Text15.setVisible(true);
                        cli.removeTemaFav(tem);
                    } else{
                        Text15.setVisible(false);
                        Text10.setText("Tema no existe en favoritos del cliente");
                        Text10.setVisible(true);
                    }
                }
            
                if (textoBox1.equalsIgnoreCase("Lista")) {
                    if(cli.buscarListPFav(textoBox6)!=null){
                        Particular part = cli.buscarListPFav(textoBox6);
                        if(part.getPrivado()==false){
                            Text10.setVisible(false);
                            Text15.setText("Lista quitada de favoritos del cliente");
                            Text15.setVisible(true);
                            cli.removePlayPartFav(part);
                        }
                    } else{
                        if(mp.buscarListPD(textoBox6)!=null){
                            Text10.setVisible(false);
                            Text15.setText("Lista quitada de favoritos del cliente");
                            Text15.setVisible(true);
                            porDefecto pd = cli.buscarListPDFav(textoBox6);
                            cli.removePlayPDFav(pd);
                        }else{
                            Text15.setVisible(false);
                            Text10.setText("Lista no existe en favoritos del cliente");
                            Text10.setVisible(true);
                        }
                    }
                    
                }

                if (textoBox1.equalsIgnoreCase("Album")) {  
                    if (cli.buscarAlbumFav(textoBox6)!=null){
                        Text10.setVisible(false);
                        Text15.setText("Album quitado de favoritos del cliente");
                        Text15.setVisible(true);
                        Album alb = cli.buscarAlbumFav(textoBox6);
                        cli.removeAlbumFav(alb);
                    } else{
                        Text15.setVisible(false);
                        Text10.setText("Album no existe en favoritos del cliente");
                        Text10.setVisible(true);
                    } 
                }
            break;
            case 12:
                //llamarConsultarPerfil();
            break;
            case 13:
                //llamarConsultarAlbum();
            break;
            case 14:
                //llamarConsultarLista();
            break;
        }
    }//GEN-LAST:event_ACEPTARActionPerformed

    private void jPanel3AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jPanel3AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel3AncestorAdded

    private void Button2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button2ActionPerformed
        // TODO add your handling code here:
        ManejadorMusica mm = ManejadorMusica.getInstance();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        ManejadorPlaylist mp = ManejadorPlaylist.getInstance();
        String texto5 = Text5.getText();
        
        if(option == 3){
            String genero = ComboBox4.getSelectedItem().toString();
            Genero gen = mm.buscarGenero(genero);
            if (generosAlbum.contains(gen)){
                Text10.setText("Genero ya aniadido");
                Text10.setVisible(true);
                Text15.setVisible(false);
            } else{
                Text15.setText("Genero aniadido");
                Text15.setVisible(true);
                Text10.setVisible(false);
                generosAlbum.add(gen);
            }   
        }
        
        if(option == 7){
            String lista = ComboBox4.getSelectedItem().toString();
            Particular part = mp.buscarListP(lista);
            
            if(part.getPrivado()){
                part.setPrivado(false);
                Text10.setVisible(false);
                Text15.setText("La lista se ha hecho publica");
                Text15.setVisible(true);
            } else{
                Text15.setVisible(false);
                Text10.setText("La lista ya es publica"); //por si tocan el boton 2 veces
                Text10.setVisible(true);
            }
            
            
        }
        
        
        if(option == 13){
            String nombreAlb = ComboBox4.getSelectedItem().toString();
            Album alb = mm.buscarAlbum(nombreAlb);
            Text7.setText("Nombre Album: "+alb.getNombre());
            Text8.setText("Anio de creacion: "+alb.getCreacion());

            String cadenaGeneros = "";
            for(Genero gen : alb.getGeneros()){
                cadenaGeneros = cadenaGeneros.concat(gen.getNombre()+" || ");
            }
            Text14.setText("Generos: "+cadenaGeneros);
            Text11.setText("Posicion || Nombre || Duracion");
            
            // Limpiar jPanel4 para evitar que se acumulen temas anteriores
            jPanel4.removeAll();
            jPanel4.setLayout(new BoxLayout(jPanel4, BoxLayout.Y_AXIS));
            
            for(Tema tem : alb.getTemas()){
                // Crear un nuevo panel para cada tema
                JPanel info = new JPanel();
                info.setLayout(new FlowLayout(FlowLayout.LEFT));

                JLabel labelNombre = new JLabel(tem.getNombre() + " - ");
                labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                labelNombre.setForeground(Color.BLACK);

                JLabel labelDuracion = new JLabel(tem.getDuracion() + " mins" + "  ");
                labelDuracion.setFont(new Font("Arial", Font.PLAIN, 12));
                labelDuracion.setForeground(Color.BLACK);

                JLabel labelOrden = new JLabel(tem.getOrdenAlbum() + " - ");
                labelOrden.setFont(new Font("Arial", Font.PLAIN, 12));
                labelOrden.setForeground(Color.BLACK);

                // Agregar etiquetas al panel de tema
                info.add(labelOrden); //el niño mimado pidio que modificara como se muestra
                info.add(labelNombre);
                info.add(labelDuracion);
                

                // Añadir el panel del tema al jPanel4
                jPanel4.add(info);
            }

           
            Text7.setVisible(true);
            Text8.setVisible(true);
            Text14.setVisible(true);
            Text11.setVisible(true);
            jPanel4.setVisible(true);
            jPanel4.revalidate();
            jPanel4.repaint();
        }
        
        if(option == 14){
            String nombreList = ComboBox4.getSelectedItem().toString();
            Object selectedItem = ComboBox1.getSelectedItem();
            
            if(texto5.equalsIgnoreCase("Clientes:")){
                Particular lista = mp.buscarListP(nombreList);
                String nickCli = selectedItem.toString();
                Cliente cli = mu.buscarCliente(nickCli);
                
                Text7.setText("Nombre Playlist: "+lista.getNombre());
                Text8.setText("Cliente creador: "+cli.getNickname());
                
                Text11.setText("Posicion || Nombre || Duracion");
            
                jPanel4.removeAll();
                jPanel4.setLayout(new BoxLayout(jPanel4, BoxLayout.Y_AXIS));
                
                for(Tema tem : lista.getTemas()){
                    // Crear un nuevo panel para cada tema
                    JPanel info = new JPanel();
                    info.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel labelNombre = new JLabel(tem.getNombre() + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);

                    JLabel labelDuracion = new JLabel(tem.getDuracion() + " mins" + "  ");
                    labelDuracion.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelDuracion.setForeground(Color.BLACK);

                    JLabel labelOrden = new JLabel(tem.getOrdenAlbum() + " - ");
                    labelOrden.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelOrden.setForeground(Color.BLACK);

                    // Agregar etiquetas al panel de tema
                    info.add(labelOrden); //el niño mimado pidio que modificara como se muestra
                    info.add(labelNombre);
                    info.add(labelDuracion);


                    // Añadir el panel del tema al jPanel4
                    jPanel4.add(info);
                }
                
            }
            
            if(texto5.equalsIgnoreCase("Generos:")){
                porDefecto lista = mp.buscarListPD(nombreList);
                String nomGen = selectedItem.toString();
                Genero gen = mm.buscarGenero(nomGen);
                
                Text7.setText("Nombre Playlist: "+lista.getNombre());
                Text8.setText("Genero: "+gen.getNombre());
                Text11.setText("Posicion || Nombre || Duracion");
                
                for(Tema tem : lista.getTemas()){
                    // Crear un nuevo panel para cada tema
                    JPanel info = new JPanel();
                    info.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel labelNombre = new JLabel(tem.getNombre() + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);

                    JLabel labelDuracion = new JLabel(tem.getDuracion() + " mins" + "  ");
                    labelDuracion.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelDuracion.setForeground(Color.BLACK);

                    JLabel labelOrden = new JLabel(tem.getOrdenAlbum() + " - ");
                    labelOrden.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelOrden.setForeground(Color.BLACK);

                    // Agregar etiquetas al panel de tema
                    info.add(labelOrden); //el niño mimado pidio que modificara como se muestra
                    info.add(labelNombre);
                    info.add(labelDuracion);
                    // Añadir el panel del tema al jPanel4
                    jPanel4.add(info);
                }   
            }
            
            Text7.setVisible(true);
            Text8.setVisible(true);
            Text14.setVisible(true);
            Text11.setVisible(true);
            jPanel4.setVisible(true);
            jPanel4.revalidate();
            jPanel4.repaint();
        }
    }//GEN-LAST:event_Button2ActionPerformed

    private void Button3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button3ActionPerformed
        // TODO add your handling code here:
        ManejadorMusica mm = ManejadorMusica.getInstance();
        ManejadorUsuario mu = ManejadorUsuario.getInstance();
        ManejadorPlaylist mp = ManejadorPlaylist.getInstance();
        String textfield7 = TextField7.getText();
        String textfield8 = TextField8.getText();
        String textfield9 = TextField9.getText();
        
        
        if(option == 3){
            int posicionC = Integer.parseInt((String) textfield9);
            //no voy a hacer un alta tema solo para poner esta singular linea
            Tema temaNuevo = IC.CrearTema(textfield7, textfield8, posicionC, generosAlbum);
            if (temasAlbum.contains(temaNuevo)){ //siempre va por el else, revisar despues
                Text15.setVisible(false);
                Text10.setText("Tema ya aniadido");
                Text10.setVisible(true);
                
            } else{
                Text10.setVisible(false);
                Text15.setText("Tema aniadido");
                Text15.setVisible(true);
                //agrego a la lista "global" de temas (se borra despues de usarse)
                temasAlbum.add(temaNuevo);
                
            }
            
        }
        
        if(option==10){
            Text10.setVisible(false);
            Text15.setVisible(false);
            String operacion = ComboBox6.getSelectedItem() != null ? ComboBox6.getSelectedItem().toString() : "";
            String nickCliente = ComboBox4.getSelectedItem() != null ? ComboBox4.getSelectedItem().toString() : "";
            
            Cliente cliente = mu.buscarCliente(nickCliente);
            
            if (operacion.equalsIgnoreCase("Tema")) {
                Tema tem = mm.buscarTema(textfield7);
                if(mm.buscarTema(textfield7)!=null){
                    if(cliente.buscarTemaFav(textfield7)==null){
                        Text10.setVisible(false);
                        Text15.setText("Tema agregado a favoritos del cliente");
                        Text15.setVisible(true);
                        cliente.addTemaFav(tem);
                    }else{
                        Text15.setVisible(false);
                        Text10.setText("Tema "+textfield7+" ya fue agregado");
                        Text10.setVisible(true);
                    }
                } else{
                    Text15.setVisible(false);
                    Text10.setText("Tema "+textfield7+" no existe");
                    Text10.setVisible(true);
                }
            }
            
            if (operacion.equalsIgnoreCase("Lista")) {
                Particular part = mp.buscarListP(textfield7);
                porDefecto pd = mp.buscarListPD(textfield7);
                if(mp.buscarListP(textfield7)!=null){
                    if(cliente.buscarListPFav(textfield7)==null){
                        if(part.getPrivado()==false){
                            Text10.setVisible(false);
                            Text15.setText("Lista agregada a favoritos del cliente");
                            Text15.setVisible(true);
                            cliente.addParticularFav(part);
                        }
                        if(part.getPrivado()==true){
                            Text15.setVisible(false);
                            Text10.setText("Lista "+textfield7+" es privada y no puede agregarse");
                            Text10.setVisible(true);
                        }
                    }else{
                        Text15.setVisible(false);
                        Text10.setText("Lista "+textfield7+" ya fue agruegada");
                        Text10.setVisible(true);
                    }     
                }
                if(mp.buscarListPD(textfield7)!=null){
                            if(cliente.buscarListPDFav(textfield7)==null){
                            Text10.setVisible(false);
                            Text15.setText("Lista agregada a favoritos del cliente");
                            Text15.setVisible(true);
                            cliente.addPDFav(pd);
                            }else{
                                Text15.setVisible(false);
                                Text10.setText("Lista "+textfield7+" ya fue agruegada");
                                Text10.setVisible(true);
                            }
                } 
                
                if((mp.buscarListP(textfield7))==null && mp.buscarListPD(textfield7) ==null){
                    Text15.setVisible(false);
                    Text10.setText("Lista "+textfield7+" no existe");
                    Text10.setVisible(true);
                }
            }
            
            if (operacion.equalsIgnoreCase("Album")) {  
                if (mm.buscarAlbum(textfield7)!=null){
                    Album alb = mm.buscarAlbum(textfield7);
                    if(cliente.buscarAlbumFav(textfield7)==null){
                        Text10.setVisible(false);
                        Text15.setText("Album agregado a favoritos del cliente");
                        Text15.setVisible(true);
                        cliente.addAlbumFav(alb);
                    }else{
                        Text15.setVisible(false);
                        Text10.setText("Album "+textfield7+" ya fue agregado");
                        Text10.setVisible(true);
                    }
                } else{
                    Text15.setVisible(false);
                    Text10.setText("Album "+textfield7+" no existe");
                    Text10.setVisible(true);
                }
            }
            
        }
    }//GEN-LAST:event_Button3ActionPerformed

    private void TextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField7ActionPerformed

    private void TextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField1ActionPerformed

    private void TextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextField2ActionPerformed

    private void Button4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button4ActionPerformed
        // TODO add your handling code here:
        /*El caso de uso comienza cuando el administrador desea consultar el perfil de un cliente. Para
        ello el sistema muestra la lista de todos los clientes y el administrador elige uno. Luego, el
        sistema muestra todos los datos básicos del cliente, incluyendo, sí tiene, su imagen asociada.
        Además, se muestran los nickname de todos los seguidores que tiene, de los usuarios a los
        que sigue (identificando si son clientes o artistas), se muestran las listas de reproducción que
        creó y las preferencias que tiene guardadas. */
        if(ComboBox5.getSelectedItem() != null){
            ManejadorUsuario mu = ManejadorUsuario.getInstance();
            Cliente cli = mu.buscarCliente(ComboBox5.getSelectedItem().toString());
            Text9.setText("Datos de Cliente " + cli.getNickname());
            Button4.setVisible(false);
            ComboBox5.setVisible(false);
            ComboBox5.removeAll();
            Text2.setText("Nombre: " + cli.getNombre());
            Text3.setText("Nickname: " + cli.getApellido());
            Text4.setText("Correo: " + cli.getCorreo());
            
            //Falta lo de los usuarios.artista en las tablas de seguir y 
            //seguidor pero no estaba hecho al momento de la creacion de 
            //esta funcion, luego se corregira.
            
            if(cli.getCliSigueA() != null){
                jPanel11.removeAll();
                jPanel11.setLayout(new BoxLayout(jPanel11, BoxLayout.Y_AXIS));
                for(Cliente cliSeguido : cli.getCliSigueA()){
                    // Crear un nuevo panel para cada tema
                    JPanel info5 = new JPanel();
                    info5.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel labelNombre = new JLabel(cliSeguido.getNickname() + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);
                        
                    JLabel labelTipo = new JLabel("Cliente" + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);
                    
                    // Agregar etiquetas al panel de tema
                    info5.add(labelNombre);
                    info5.add(labelTipo);

                    // Añadir el panel del tema al jPanel4
                    jPanel11.add(info5);
                }
            }
            if(cli.getSeguidoPor()!= null){
                jPanel12.removeAll();
                jPanel12.setLayout(new BoxLayout(jPanel12, BoxLayout.Y_AXIS));
                for(Cliente cliSeguido : cli.getSeguidoPor()){
                    // Crear un nuevo panel para cada tema
                    JPanel info6 = new JPanel();
                    info6.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel labelNombre = new JLabel(cliSeguido.getNickname()+ " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);
                        
                    JLabel labelTipo = new JLabel("Cliente" + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);
                    
                    // Agregar etiquetas al panel de tema
                    info6.add(labelNombre);
                    info6.add(labelTipo);

                    // Añadir el panel del tema al jPanel4
                    jPanel12.add(info6);
                }
            }
            if(cli.getParticular() != null){
                jPanel8.removeAll();
                jPanel8.setLayout(new BoxLayout(jPanel8, BoxLayout.Y_AXIS));
                for(Particular play : cli.getParticular()){
                    // Crear un nuevo panel para cada tema
                    JPanel info2 = new JPanel();
                    info2.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel labelNombre = new JLabel(play.getNombre() + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);

                    // Agregar etiquetas al panel de tema
                    info2.add(labelNombre);

                    // Añadir el panel del tema al jPanel4
                    jPanel8.add(info2);
                }
            }
            if(cli.getTemasFAV() != null){
                jPanel9.removeAll();
                jPanel9.setLayout(new BoxLayout(jPanel9, BoxLayout.Y_AXIS));
                for(Tema tem : cli.getTemasFAV()){
                    // Crear un nuevo panel para cada tema
                    JPanel info = new JPanel();
                    info.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel labelNombre = new JLabel(tem.getNombre() + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);

                    JLabel labelDuracion = new JLabel(tem.getDuracion() + " mins" + "  ");
                    labelDuracion.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelDuracion.setForeground(Color.BLACK);

                    // Agregar etiquetas al panel de tema
                    info.add(labelNombre);
                    info.add(labelDuracion);

                    // Añadir el panel del tema al jPanel4
                    jPanel9.add(info);
                }
            }
            if(cli.getPlayFavPD() != null){
                jPanel10.removeAll();
                jPanel10.setLayout(new BoxLayout(jPanel10, BoxLayout.Y_AXIS));
                for(porDefecto play : cli.getPlayFavPD()){
                    // Crear un nuevo panel para cada tema
                    JPanel info3 = new JPanel();
                    info3.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel labelNombre = new JLabel(play.getNombre() + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);

                    JLabel labelGenero = new JLabel(play.getGenero() + "  ");
                    labelGenero.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelGenero.setForeground(Color.BLACK);

                    // Agregar etiquetas al panel de tema
                    info3.add(labelNombre);
                    info3.add(labelGenero);

                    // Añadir el panel del tema al jPanel4
                    jPanel10.add(info3);
                }
                for(Particular play : cli.getPlayFavPart()){
                    // Crear un nuevo panel para cada tema
                    JPanel info4 = new JPanel();
                    info4.setLayout(new FlowLayout(FlowLayout.LEFT));

                    JLabel labelNombre = new JLabel(play.getNombre() + " - ");
                    labelNombre.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelNombre.setForeground(Color.BLACK);

                    JLabel labelGenero = new JLabel("---" + "  ");
                    labelGenero.setFont(new Font("Arial", Font.PLAIN, 12));
                    labelGenero.setForeground(Color.BLACK);

                    // Agregar etiquetas al panel de tema
                    info4.add(labelNombre);
                    info4.add(labelGenero);

                    // Añadir el panel del tema al jPanel4
                    jPanel10.add(info4);
                }
            }
            jScrollPane1.setVisible(true);
            jScrollPane2.setVisible(true);
            jScrollPane3.setVisible(true);
            jScrollPane4.setVisible(true);
            jScrollPane5.setVisible(true);
            jPanel8.setVisible(true);
            jPanel8.revalidate();
            jPanel8.repaint();
            jPanel9.setVisible(true);
            jPanel9.revalidate();
            jPanel9.repaint();
            jPanel10.setVisible(true);
            jPanel10.revalidate();
            jPanel10.repaint();
            jPanel5.setVisible(true);
            jPanel5.revalidate();
            jPanel5.repaint();
            jPanel11.setVisible(true);
            jPanel11.revalidate();
            jPanel11.repaint();
            jPanel12.setVisible(true);
            jPanel12.revalidate();
            jPanel12.repaint();
            
            Text2.setVisible(true);
            Text3.setVisible(true);
            Text4.setVisible(true);
            Text9.setVisible(true);
        }
    }//GEN-LAST:event_Button4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ventana().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ACEPTAR;
    private javax.swing.JButton AgregarTemasListas;
    private javax.swing.JButton AltaAlbum;
    private javax.swing.JButton AltaGenero;
    private javax.swing.JButton AltaPerfil;
    private javax.swing.JButton Button1;
    private javax.swing.JButton Button2;
    private javax.swing.JButton Button3;
    private javax.swing.JButton Button4;
    private javax.swing.JComboBox<String> ComboBox1;
    private javax.swing.JComboBox<String> ComboBox2;
    private javax.swing.JComboBox<String> ComboBox3;
    private javax.swing.JComboBox<String> ComboBox4;
    private javax.swing.JComboBox<String> ComboBox5;
    private javax.swing.JComboBox<String> ComboBox6;
    private javax.swing.JButton ConsultarAlbum;
    private javax.swing.JButton ConsultarLista;
    private javax.swing.JButton ConsultarPerfil;
    private javax.swing.JButton CrearLista;
    private javax.swing.JButton DejarSeguir;
    private javax.swing.JButton EXIT;
    private javax.swing.JButton EliminarTLA;
    private javax.swing.JButton GuardarTLA;
    private javax.swing.JLabel Logo;
    private javax.swing.JButton PublicarLista;
    private javax.swing.JButton QuitarTemasListas;
    private javax.swing.JButton SeguirUsuario;
    private javax.swing.JLabel Text1;
    private javax.swing.JLabel Text10;
    private javax.swing.JLabel Text11;
    private javax.swing.JLabel Text12;
    private javax.swing.JLabel Text13;
    private javax.swing.JLabel Text14;
    private javax.swing.JLabel Text15;
    private javax.swing.JLabel Text16;
    private javax.swing.JLabel Text2;
    private javax.swing.JLabel Text3;
    private javax.swing.JLabel Text4;
    private javax.swing.JLabel Text5;
    private javax.swing.JLabel Text6;
    private javax.swing.JLabel Text7;
    private javax.swing.JLabel Text8;
    private javax.swing.JLabel Text9;
    private javax.swing.JTextArea TextArea1;
    private javax.swing.JTextField TextField1;
    private javax.swing.JTextField TextField2;
    private javax.swing.JTextField TextField3;
    private javax.swing.JTextField TextField4;
    private javax.swing.JTextField TextField5;
    private javax.swing.JTextField TextField6;
    private javax.swing.JTextField TextField7;
    private javax.swing.JTextField TextField8;
    private javax.swing.JTextField TextField9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    // End of variables declaration//GEN-END:variables
}
